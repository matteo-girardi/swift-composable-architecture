{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AllCasePaths","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct"]}],"sections":[],"kind":"symbol","metadata":{"roleHeading":"Structure","externalID":"s:22ComposableArchitecture10TaskResultO12AllCasePathsV","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Success","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AllCasePaths","kind":"identifier"}],"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"struct","navigatorTitle":[{"text":"AllCasePaths","kind":"identifier"}],"title":"TaskResult.AllCasePaths","role":"symbol","extendedModule":"ComposableArchitecture"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/CasePathable-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/CasePathable-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct","interfaceLanguage":"swift"},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"CasePathable.AllCasePaths"},{"text":".","type":"text"}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct\/failure","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct\/success"],"generated":true,"anchor":"Instance-Properties"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","title":"TaskResult","navigatorTitle":[{"text":"TaskResult","kind":"identifier"}],"abstract":[{"text":"A value that represents either a success or a failure. This type differs from Swiftâ€™s ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" ","type":"text"},{"text":"type in that it uses only one generic for the success case, leaving the failure case as an","type":"text"},{"text":" ","type":"text"},{"text":"untyped ","type":"text"},{"type":"codeVoice","code":"Error"},{"text":".","type":"text"}],"deprecated":true,"type":"topic","url":"\/documentation\/composablearchitecture\/taskresult","role":"symbol","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TaskResult","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/AllCasePaths-swift.struct":{"url":"\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct","navigatorTitle":[{"text":"AllCasePaths","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"TaskResult.AllCasePaths","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AllCasePaths","kind":"identifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Success"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/AllCasePaths-swift.struct/success":{"url":"\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct\/success","type":"topic","kind":"symbol","abstract":[],"title":"success","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"success","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnyCasePath","kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore03AnyA4PathV"},{"text":"<","kind":"text"},{"text":"TaskResult","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct\/success","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/CasePathable-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/CasePathable-Implementations","role":"collectionGroup","type":"topic","title":"CasePathable Implementations","kind":"article","abstract":[],"url":"\/documentation\/composablearchitecture\/taskresult\/casepathable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/AllCasePaths-swift.struct/failure":{"url":"\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct\/failure","title":"failure","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"failure","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnyCasePath","preciseIdentifier":"s:13CasePathsCore03AnyA4PathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"TaskResult","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":">, any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct\/failure","abstract":[],"type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"title":"ComposableArchitecture","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"topic","role":"symbol"}}}