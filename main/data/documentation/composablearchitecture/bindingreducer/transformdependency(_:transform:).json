{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@warn_unqualified_access","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transformDependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"transform","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A key path that indicates the property of the ","type":"text"},{"code":"DependencyValues","type":"codeVoice"},{"text":" structure to","type":"text"},{"text":" ","type":"text"},{"text":"transform.","type":"text"}]}],"name":"keyPath"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that is handed a mutable instance of the value specified by the key"},{"type":"text","text":" "},{"type":"text","text":"path."}]}],"name":"transform"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"This is similar to ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/dependency(_:_:)","isActive":true},{"text":", except it allows you to mutate a dependency value","type":"text"},{"text":" ","type":"text"},{"text":"directly. This can be handy when you want to alter a dependency but still use its current","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example, suppose you want to see when a particular endpoint of a dependency gets called","type":"text"},{"text":" ","type":"text"},{"text":"in your application. You can override that endpoint to insert a breakpoint or print statement,","type":"text"},{"text":" ","type":"text"},{"text":"but still call out to the original endpoint:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["  Feature()","    .transformDependency(\\.speechClient) { speechClient in","      speechClient.requestAuthorization = {","        print(\"requestAuthorization\")","        try await speechClient.requestAuthorization()","      }","    }"],"type":"codeListing"},{"inlineContent":[{"text":"You can also transform ","type":"text"},{"inlineContent":[{"type":"text","text":"all"}],"type":"emphasis"},{"text":" dependency values at once by using the ","type":"text"},{"code":"\\.self","type":"codeVoice"},{"text":" key path:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["Feature()","  .transformDependency(\\.self) { dependencyValues in","    \/\/ Access to all dependencies in here","  }"],"type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The trailing closure of "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/transformDependency(_:transform:)","isActive":true},{"type":"text","text":" is called for every"},{"type":"text","text":" "},{"type":"text","text":"action sent to the reducer, and so you can expect it to be called many times in an"},{"type":"text","text":" "},{"type":"text","text":"application’s lifecycle. This means you should typically not create dependencies in the"},{"type":"text","text":" "},{"type":"text","text":"closure as that will cause a new dependency to be created everytime an action is sent."}]}],"type":"aside","name":"Warning","style":"warning"}]}],"metadata":{"title":"transformDependency(_:transform:)","roleHeading":"Instance Method","symbolKind":"method","externalID":"s:22ComposableArchitecture7ReducerPAAE19transformDependency_0D0AA01_e10KeyWritingC0VyxGs08WritableF4PathCy12Dependencies0E6ValuesVqd__G_yqd__zctlF::SYNTHESIZED::s:22ComposableArchitecture14BindingReducerV","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transformDependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependencyKeyWritingReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"extendedModule":"ComposableArchitecture","modules":[{"name":"ComposableArchitecture"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/bindingreducer\/transformdependency(_:transform:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/transformDependency(_:transform:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","abstract":[{"type":"text","text":"Transform a reducer’s dependency value at the specified key path with the given function."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/Reducer-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/Reducer-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"title":"ComposableArchitecture","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","kind":"article","title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","role":"collectionGroup","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/transformDependency(_:transform:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/transformDependency(_:transform:)","url":"\/documentation\/composablearchitecture\/bindingreducer\/transformdependency(_:transform:)","title":"transformDependency(_:transform:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transformDependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"transform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","abstract":[{"text":"Transform a reducer’s dependency value at the specified key path with the given function.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/Reducer-Implementations":{"abstract":[],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/bindingreducer\/reducer-implementations","type":"topic","title":"Reducer Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/Reducer-Implementations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/dependency(_:_:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/dependency(_:_:)","url":"\/documentation\/composablearchitecture\/bindingreducer\/dependency(_:_:)","title":"dependency(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","abstract":[{"text":"Sets the dependency value of the specified key path to the given value.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"title":"BindingReducer","abstract":[{"text":"A reducer that updates bindable state when it receives binding actions.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingReducer","kind":"identifier"}],"navigatorTitle":[{"text":"BindingReducer","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/bindingreducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","kind":"symbol"}}}