{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init()","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Initializer","modules":[{"name":"ComposableArchitecture"}],"role":"symbol","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","externalID":"s:22ComposableArchitecture14BindingReducerVACyxq_q_Gyc5StateQy_RszAA14BindableActionR_q0_Rs_rlufc"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer"]]},"abstract":[{"text":"Initializes a reducer that updates bindable state when it receives binding actions.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"() "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP","text":"BindableAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"}]}],"kind":"declarations"}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/bindingreducer\/init()"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"title":"ComposableArchitecture","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"url":"\/documentation\/composablearchitecture\/bindableaction","role":"symbol","title":"BindableAction","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindableAction","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","navigatorTitle":[{"text":"BindableAction","kind":"identifier"}],"abstract":[{"text":"An action type that exposes a ","type":"text"},{"code":"binding","type":"codeVoice"},{"text":" case that holds a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction"},{"text":".","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","navigatorTitle":[{"text":"BindingAction","kind":"identifier"}],"abstract":[{"text":"An action that describes simple mutations to some root state at a writable key path.","type":"text"}],"url":"\/documentation\/composablearchitecture\/bindingaction","type":"topic","role":"symbol","title":"BindingAction","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"title":"BindingReducer","abstract":[{"text":"A reducer that updates bindable state when it receives binding actions.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingReducer","kind":"identifier"}],"navigatorTitle":[{"text":"BindingReducer","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/bindingreducer","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/init()":{"url":"\/documentation\/composablearchitecture\/bindingreducer\/init()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init()","title":"init()","type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Initializes a reducer that updates bindable state when it receives binding actions."}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","kind":"article","title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","role":"collectionGroup","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/State":{"abstract":[{"type":"text","text":"The root state type that contains bindable fields."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/bindableaction\/state","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"type":"topic","title":"State","required":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]}}}