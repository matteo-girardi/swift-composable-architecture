{"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"confirmationDialog"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ButtonAction"},{"kind":"text","text":">("},{"kind":"externalParam","text":"store"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ConfirmationDialogState","preciseIdentifier":"s:15SwiftNavigation23ConfirmationDialogStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ButtonAction"},{"kind":"text","text":">>, "},{"kind":"typeIdentifier","text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ButtonAction"},{"kind":"text","text":">>) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"role":"symbol","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"title":"confirmationDialog(store:)","symbolKind":"method","externalID":"s:7SwiftUI4ViewP22ComposableArchitectureE18confirmationDialog5storeQrAD5StoreCyAD17PresentationStateVy0A10Navigation012ConfirmationgK0Vyqd__GGAD0J6ActionOyqd__GG_tlF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","extendedModule":"SwiftUICore","platforms":[{"introducedAt":"15.0","beta":false,"deprecated":false,"name":"iOS","unavailable":false},{"introducedAt":"12.0","beta":false,"deprecated":false,"name":"macOS","unavailable":false},{"introducedAt":"15.0","beta":false,"deprecated":false,"name":"tvOS","unavailable":false},{"introducedAt":"8.0","beta":false,"deprecated":false,"name":"watchOS","unavailable":false}],"roleHeading":"Instance Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"text":"@preconcurrency","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"confirmationDialog","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ButtonAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"store","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","text":"PresentationState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15SwiftNavigation23ConfirmationDialogStateV","text":"ConfirmationDialogState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ButtonAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","text":"PresentationAction","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ButtonAction","kind":"typeIdentifier"},{"text":">>) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"store","content":[{"inlineContent":[{"type":"text","text":"A store that is focused on "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","type":"reference","isActive":true},{"type":"text","text":" and "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","type":"reference","isActive":true},{"type":"text","text":" for a"},{"type":"text","text":" "},{"type":"text","text":"dialog."}],"type":"paragraph"}]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/confirmationdialog(store:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/confirmationDialog(store:)"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"kind":"symbol","abstract":[{"type":"text","text":"Displays a dialog when the storeâ€™s state becomes non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", and dismisses it when it becomes"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"kind":"symbol","deprecated":true,"abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"title":"IfLetStore","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationState"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"PresentationState"}],"title":"PresentationState","url":"\/documentation\/composablearchitecture\/presentationstate","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","type":"topic","url":"\/documentation\/composablearchitecture\/presentationaction","role":"symbol","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationAction","kind":"identifier"}],"navigatorTitle":[{"text":"PresentationAction","kind":"identifier"}],"title":"PresentationAction","abstract":[{"text":"A wrapper type for actions that can be presented.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"title":"ComposableArchitecture","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"type":"topic","title":"Store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","url":"\/documentation\/composablearchitecture\/store","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}],"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"text":"around to views that need to interact with the application.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","type":"topic","kind":"article","role":"collectionGroup","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/confirmationDialog(store:)":{"url":"\/documentation\/composablearchitecture\/ifletstore\/confirmationdialog(store:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/confirmationDialog(store:)","type":"topic","role":"symbol","title":"confirmationDialog(store:)","abstract":[{"type":"text","text":"Displays a dialog when the storeâ€™s state becomes non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":", and dismisses it when it becomes"},{"type":"text","text":" "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"confirmationDialog","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ButtonAction","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"store","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ConfirmationDialogState","preciseIdentifier":"s:15SwiftNavigation23ConfirmationDialogStateV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ButtonAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ButtonAction","kind":"typeIdentifier"},{"text":">>) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","kind":"article","title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","role":"collectionGroup","type":"topic"}}}