{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartsymbolscale(_:)-8jdo5"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartSymbolScale(_:)-8jdo5","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartSymbolScale","kind":"identifier"},{"text":"<","kind":"text"},{"text":"DataValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"mapping","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s13KeyValuePairsV","text":"KeyValuePairs","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"DataValue","kind":"typeIdentifier"},{"text":", any ","kind":"text"},{"preciseIdentifier":"s:6Charts16ChartSymbolShapeP","text":"ChartSymbolShape","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataValue","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:6Charts9PlottableP","text":"Plottable","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"roleHeading":"Instance Method","role":"symbol","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"symbolKind":"method","platforms":[{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"16.0","name":"iOS"},{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"13.0","name":"macOS"},{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"16.0","name":"tvOS"},{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"9.0","name":"watchOS"}],"externalID":"s:7SwiftUI4ViewP6ChartsE16chartSymbolScaleyQrs13KeyValuePairsVyqd__AD05ChartF5Shape_pGAD9PlottableRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chartSymbolScale"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"DataValue"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13KeyValuePairsV","text":"KeyValuePairs"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DataValue"},{"kind":"text","text":", any "},{"kind":"typeIdentifier","preciseIdentifier":"s:6Charts16ChartSymbolShapeP","text":"ChartSymbolShape"},{"kind":"text","text":">) -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"extendedModule":"SwiftUICore","title":"chartSymbolScale(_:)"},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.chartSymbolScale(_:)","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"title":"ComposableArchitecture","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartSymbolScale(_:)-8jdo5":{"url":"\/documentation\/composablearchitecture\/ifletstore\/chartsymbolscale(_:)-8jdo5","abstract":[],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartSymbolScale(_:)-8jdo5","title":"chartSymbolScale(_:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartSymbolScale","kind":"identifier"},{"text":"<","kind":"text"},{"text":"DataValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyValuePairs","kind":"typeIdentifier","preciseIdentifier":"s:s13KeyValuePairsV"},{"text":"<","kind":"text"},{"text":"DataValue","kind":"typeIdentifier"},{"text":", any ","kind":"text"},{"text":"ChartSymbolShape","kind":"typeIdentifier","preciseIdentifier":"s:6Charts16ChartSymbolShapeP"},{"text":">) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","type":"topic","kind":"article","role":"collectionGroup","title":"Deprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","kind":"article","title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","role":"collectionGroup","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","role":"symbol","navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"kind":"symbol","deprecated":true,"abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"title":"IfLetStore","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","title":"View Implementations"}}}