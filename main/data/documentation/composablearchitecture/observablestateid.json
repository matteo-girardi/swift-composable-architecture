{"topicSections":[{"title":"Operators","generated":true,"anchor":"Operators","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/==(_:_:)"]},{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/init()"]},{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/hash(into:)"]},{"title":"Default Implementations","generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/Equatable-Implementations"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableStateID","kind":"identifier"}]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/observablestateid"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A unique identifier for a observed value."}],"kind":"symbol","sections":[],"metadata":{"roleHeading":"Structure","role":"symbol","externalID":"s:22ComposableArchitecture17ObservableStateIDV","navigatorTitle":[{"kind":"identifier","text":"ObservableStateID"}],"symbolKind":"struct","title":"ObservableStateID","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableStateID","kind":"identifier"}],"modules":[{"name":"ComposableArchitecture"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"seeAlsoSections":[{"title":"Change tracking","generated":true,"anchor":"Change-tracking","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar":{"kind":"symbol","abstract":[{"text":"Provides storage for tracking and access to data changes.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservationStateRegistrar"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar","url":"\/documentation\/composablearchitecture\/observationstateregistrar","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservationStateRegistrar"}],"title":"ObservationStateRegistrar","role":"symbol"},"doc://ComposableArchitecture/SH":{"identifier":"doc:\/\/ComposableArchitecture\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID/hash(into:)":{"kind":"symbol","role":"symbol","abstract":[],"title":"hash(into:)","url":"\/documentation\/composablearchitecture\/observablestateid\/hash(into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/hash(into:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID/==(_:_:)":{"abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ObservableStateID","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ObservableStateID","preciseIdentifier":"s:22ComposableArchitecture17ObservableStateIDV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"==(_:_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/==(_:_:)","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/observablestateid\/==(_:_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/state","title":"State","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"required":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableState"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","role":"symbol","url":"\/documentation\/composablearchitecture\/observablestate()","kind":"symbol","title":"ObservableState()","abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID/init()":{"kind":"symbol","role":"symbol","abstract":[],"title":"init()","url":"\/documentation\/composablearchitecture\/observablestateid\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/init()","type":"topic"},"doc://ComposableArchitecture/SQ":{"identifier":"doc:\/\/ComposableArchitecture\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"title":"ComposableArchitecture","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID/Equatable-Implementations":{"kind":"article","role":"collectionGroup","abstract":[],"title":"Equatable Implementations","url":"\/documentation\/composablearchitecture\/observablestateid\/equatable-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/Equatable-Implementations","type":"topic"},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID":{"abstract":[{"text":"A unique identifier for a observed value.","type":"text"}],"url":"\/documentation\/composablearchitecture\/observablestateid","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","title":"ObservableStateID","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableStateID","kind":"identifier"}],"navigatorTitle":[{"text":"ObservableStateID","kind":"identifier"}]}}}