{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackElementID"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true,"type":"reference"},{"text":" type creates instances of this identifier when new elements are added to","type":"text"},{"text":" ","type":"text"},{"text":"the stack. This makes it possible to easily look up specific elements in the stack without","type":"text"},{"text":" ","type":"text"},{"text":"resorting to positional indices, which can be error prone, especially when dealing with async","type":"text"},{"text":" ","type":"text"},{"text":"effects.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The identifier is backed by a deterministic, generational ID. This allows you to predict how"},{"type":"text","text":" "},{"type":"text","text":"IDs will be created and allows you to write tests for how features behave in the stack."}],"type":"paragraph"},{"code":["@Test","func basics() {","  var path = StackState<Int>()","  path.append(42)","  XCTAssertEqual(path[id: 0], 42)","  path.append(1729)","  XCTAssertEqual(path[id: 1], 1729)","","  path.removeAll()","  path.append(-1)","  XCTAssertEqual(path[id: 2], -1)","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Notice that after removing all elements and appending a new element, the ID generated was 2 and"},{"type":"text","text":" "},{"type":"text","text":"did not go back to 0. This is because in tests the IDs are "},{"inlineContent":[{"type":"text","text":"generational"}],"type":"emphasis"},{"type":"text","text":", which means they"},{"type":"text","text":" "},{"type":"text","text":"keep counting up, even if you remove elements from the stack."}],"type":"paragraph"}]}],"seeAlsoSections":[{"title":"Stack-based navigation","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf"],"generated":true,"anchor":"Stack-based-navigation"}],"metadata":{"title":"StackElementID","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackElementID","kind":"identifier"}],"externalID":"s:22ComposableArchitecture14StackElementIDV","navigatorTitle":[{"text":"StackElementID","kind":"identifier"}],"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Structure","role":"symbol","symbolKind":"struct"},"topicSections":[{"title":"Default Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDumpStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/ExpressibleByIntegerLiteral-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"sections":[],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/10CustomDump0aB17StringConvertibleP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/s27ExpressibleByIntegerLiteralP","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"type":"conformsTo"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/stackelementid"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"An opaque type that identifies an element of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"},{"text":".","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"]]},"references":{"doc://ComposableArchitecture/10CustomDump0aB17StringConvertibleP":{"type":"unresolvable","title":"CustomDump.CustomDumpStringConvertible","identifier":"doc:\/\/ComposableArchitecture\/10CustomDump0aB17StringConvertibleP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"text":" ","type":"text"},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"role":"collectionGroup","type":"topic","title":"Navigation","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/ExpressibleByIntegerLiteral-Implementations":{"role":"collectionGroup","abstract":[],"type":"topic","title":"ExpressibleByIntegerLiteral Implementations","url":"\/documentation\/composablearchitecture\/stackelementid\/expressiblebyintegerliteral-implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/ExpressibleByIntegerLiteral-Implementations"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/s8CopyableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","type":"unresolvable","title":"Swift.Copyable"},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/Equatable-Implementations":{"role":"collectionGroup","abstract":[],"type":"topic","title":"Equatable Implementations","url":"\/documentation\/composablearchitecture\/stackelementid\/equatable-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/Equatable-Implementations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID":{"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"StackElementID","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackElementID","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/stackelementid","title":"StackElementID","abstract":[{"type":"text","text":"An opaque type that identifies an element of "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","type":"reference","isActive":true},{"type":"text","text":"."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/CustomDebugStringConvertible-Implementations":{"type":"topic","title":"CustomDebugStringConvertible Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/stackelementid\/customdebugstringconvertible-implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDebugStringConvertible-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackActionOf":{"url":"\/documentation\/composablearchitecture\/stackactionof","kind":"symbol","title":"StackActionOf","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackActionOf"}],"navigatorTitle":[{"kind":"identifier","text":"StackActionOf"}],"type":"topic","abstract":[{"text":"A convenience type alias for referring to a stack action of a given reducer’s domain.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"title":"ComposableArchitecture","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/s27ExpressibleByIntegerLiteralP":{"identifier":"doc:\/\/ComposableArchitecture\/s27ExpressibleByIntegerLiteralP","title":"Swift.ExpressibleByIntegerLiteral","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"role":"article","type":"topic","abstract":[{"type":"text","text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to"},{"type":"text","text":" "},{"type":"text","text":"model your domains, how to integrate features, how to test your features, and more."}],"url":"\/documentation\/composablearchitecture\/stackbasednavigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","title":"Stack-based navigation","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackState","kind":"identifier"}],"navigatorTitle":[{"text":"StackState","kind":"identifier"}],"abstract":[{"text":"A list of data representing the content of a navigation stack.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/stackstate","title":"StackState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction":{"role":"symbol","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackAction","kind":"identifier"}],"abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a navigation stack."}],"url":"\/documentation\/composablearchitecture\/stackaction","navigatorTitle":[{"text":"StackAction","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","title":"StackAction"},"doc://ComposableArchitecture/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/ComposableArchitecture\/SQ"},"doc://ComposableArchitecture/SH":{"identifier":"doc:\/\/ComposableArchitecture\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/CustomDumpStringConvertible-Implementations":{"title":"CustomDumpStringConvertible Implementations","role":"collectionGroup","type":"topic","abstract":[],"kind":"article","url":"\/documentation\/composablearchitecture\/stackelementid\/customdumpstringconvertible-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDumpStringConvertible-Implementations"}}}