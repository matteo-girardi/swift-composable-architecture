{"abstract":[{"text":"Initializes a reducer that combines all of the reducers in the given build block.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/combinereducers\/init(_:)"]}],"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"@","kind":"attribute"},{"text":"ReducerBuilder","kind":"attribute","preciseIdentifier":"s:22ComposableArchitecture14ReducerBuilderO","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"},{"text":" ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"build","kind":"internalParam"},{"text":": () -> ","kind":"text"},{"text":"Reducers","kind":"typeIdentifier"},{"text":")","kind":"text"}]}]},{"parameters":[{"name":"build","content":[{"type":"paragraph","inlineContent":[{"text":"A reducer builder.","type":"text"}]}]}],"kind":"parameters"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/init(_:)","interfaceLanguage":"swift"},"metadata":{"externalID":"s:22ComposableArchitecture15CombineReducersVyACyxq_q0_Gq0_yXEcfc","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Reducers","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"init","title":"init(_:)","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers/init(_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/init(_:)","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Initializes a reducer that combines all of the reducers in the given build block.","type":"text"}],"title":"init(_:)","url":"\/documentation\/composablearchitecture\/combinereducers\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Reducers","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerBuilder":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReducerBuilder"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerBuilder","url":"\/documentation\/composablearchitecture\/reducerbuilder","title":"ReducerBuilder","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerBuilder"}],"kind":"symbol","abstract":[{"text":"A result builder for combining reducers into a single reducer by running each, one after the","type":"text"},{"text":" ","type":"text"},{"text":"other, and merging their effects.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CombineReducers","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","title":"CombineReducers","abstract":[{"text":"Combines multiple reducers into a single reducer.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"CombineReducers","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/combinereducers"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"title":"ComposableArchitecture","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"}}}