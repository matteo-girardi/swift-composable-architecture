{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/combinereducers\/signpost(_:log:)"]}],"abstract":[{"text":"Instruments a reducer with","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data"},{"text":".","type":"text"}],"metadata":{"title":"signpost(_:log:)","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Method","externalID":"s:22ComposableArchitecture7ReducerPAAE8signpost_3logAA09_SignpostC0VyxGSS_So06OS_os_E0CtF::SYNTHESIZED::s:22ComposableArchitecture15CombineReducersV","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signpost","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"log","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)OS_os_log","text":"OSLog","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_SignpostReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"ComposableArchitecture"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/signpost(_:log:)"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/Reducer-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@warn_unqualified_access"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"signpost"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"prefix"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" = \"\", "},{"kind":"externalParam","text":"log"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)OS_os_log","kind":"typeIdentifier","text":"OSLog"},{"kind":"text","text":" = OSLog(\n      subsystem: \"co.pointfree.ComposableArchitecture\",\n      category: \"Reducer Instrumentation\"\n    )) -> "},{"kind":"typeIdentifier","text":"_SignpostReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A string to print at the beginning of the formatted message for the signpost.","type":"text"}],"type":"paragraph"}],"name":"prefix"},{"content":[{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"OSLog","type":"codeVoice"},{"text":" to use for signposts.","type":"text"}]}],"name":"log"}]},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"A reducer that has been enhanced with instrumentation."}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Each invocation of the reducer will be measured by an interval, and the lifecycle of its"},{"type":"text","text":" "},{"type":"text","text":"effects will be measured with interval and event signposts."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To use, build your app for profiling, create a blank instrument, and add the signpost"},{"type":"text","text":" "},{"type":"text","text":"instrument. Start recording your app you will see timing information for every action sent to"},{"type":"text","text":" "},{"type":"text","text":"the store, as well as every effect executed."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Effect instrumentation can be particularly useful for inspecting the lifecycle of long-living"},{"type":"text","text":" "},{"type":"text","text":"effects. For example, if you start an effect ("},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"type":"text","text":", a location manager) in "},{"code":"onAppear","type":"codeVoice"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"text","text":"forget to tear down the effect in "},{"code":"onDisappear","type":"codeVoice"},{"type":"text","text":", the instrument will show that the effect"},{"type":"text","text":" "},{"type":"text","text":"never completed."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers/signpost(_:log:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/signpost(_:log:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signpost","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"log","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"OSLog","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)OS_os_log"},{"text":") -> ","kind":"text"},{"text":"_SignpostReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic","title":"signpost(_:log:)","url":"\/documentation\/composablearchitecture\/combinereducers\/signpost(_:log:)","abstract":[{"text":"Instruments a reducer with","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","type":"reference","isActive":true},{"text":".","type":"text"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CombineReducers","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers","title":"CombineReducers","abstract":[{"text":"Combines multiple reducers into a single reducer.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"CombineReducers","kind":"identifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/combinereducers"},"https://developer.apple.com/documentation/os/logging/recording_performance_data":{"identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","title":"signposts","url":"https:\/\/developer.apple.com\/documentation\/os\/logging\/recording_performance_data","titleInlineContent":[{"text":"signposts","type":"text"}],"type":"link"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"title":"ComposableArchitecture","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CombineReducers/Reducer-Implementations":{"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/combinereducers\/reducer-implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CombineReducers\/Reducer-Implementations","title":"Reducer Implementations","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]}}}