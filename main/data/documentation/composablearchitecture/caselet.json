{"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP","doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use 'switch' with a store of observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-SwitchStore-and-CaseLet-with-switch-and-case]"}],"type":"paragraph"}],"metadata":{"externalID":"s:22ComposableArchitecture7CaseLetV","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"role":"symbol","platforms":[],"title":"CaseLet","roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"ComposableArchitecture"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseLet","kind":"identifier"},{"text":"<","kind":"text"},{"text":"EnumState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"EnumAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"CaseState","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Content","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(_:action:then:fileID:filePath:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(state:then:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/body","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/content","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/fromCaseAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/toCaseState"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"],"title":"Default Implementations","generated":true,"anchor":"Default-Implementations"}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/content":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/content","role":"symbol","title":"content","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"content"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CaseState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CaseAction"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Content"}],"url":"\/documentation\/composablearchitecture\/caselet\/content","abstract":[],"deprecated":true,"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","type":"topic","title":"View Implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","abstract":[],"role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","type":"topic","kind":"article","role":"collectionGroup","title":"Deprecations"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable"},"doc://ComposableArchitecture/7SwiftUI4ViewP":{"title":"SwiftUICore.View","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/fromCaseAction":{"kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fromCaseAction","kind":"identifier"},{"text":": (","kind":"text"},{"text":"CaseAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EnumAction","kind":"typeIdentifier"}],"type":"topic","role":"symbol","abstract":[],"title":"fromCaseAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/fromCaseAction","url":"\/documentation\/composablearchitecture\/caselet\/fromcaseaction","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","kind":"article","title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","role":"collectionGroup","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/toCaseState":{"type":"topic","title":"toCaseState","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toCaseState","kind":"identifier"},{"text":": (","kind":"text"},{"text":"EnumState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/toCaseState","url":"\/documentation\/composablearchitecture\/caselet\/tocasestate","abstract":[],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/init(state:then:)":{"title":"init(state:then:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(state:then:)","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"EnumState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/composablearchitecture\/caselet\/init(state:then:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"EnumAction"},{"type":"text","text":" is "},{"type":"codeVoice","code":"CaseAction"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Content"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"Initializes a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","type":"reference","isActive":true},{"type":"text","text":" view that computes content depending on if a store of enum state"},{"type":"text","text":" "},{"type":"text","text":"matches a particular case."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/init(_:action:then:fileID:filePath:line:column:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"((","kind":"text"},{"text":"EnumState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"CaseAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EnumAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"CaseState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"CaseAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Content","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/init(_:action:then:fileID:filePath:line:column:)","role":"symbol","url":"\/documentation\/composablearchitecture\/caselet\/init(_:action:then:fileid:filepath:line:column:)","type":"topic","title":"init(_:action:then:fileID:filePath:line:column:)","abstract":[{"text":"Initializes a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true,"type":"reference"},{"text":" view that computes content depending on if a store of enum state","type":"text"},{"text":" ","type":"text"},{"text":"matches a particular case.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/body":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/caselet\/body","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/body","deprecated":true,"role":"symbol","title":"body","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"title":"ComposableArchitecture","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"url":"\/documentation\/composablearchitecture\/caselet","title":"CaseLet","type":"topic","deprecated":true,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwitchStore"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","deprecated":true,"title":"SwitchStore","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A view that observes when enum state held in a store changes cases, and provides stores to"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true},{"type":"text","text":" views."}],"navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}]}}}