{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()"]]},"metadata":{"role":"symbol","externalID":"s:22ComposableArchitecture23ObservationStateTrackedyycfm","symbolKind":"macro","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservationStateTracked","kind":"identifier"},{"text":"()","kind":"text"}],"title":"ObservationStateTracked()","roleHeading":"Macro","modules":[{"name":"ComposableArchitecture"}]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/observationstatetracked()"]}],"seeAlsoSections":[{"generated":true,"title":"Supporting macros","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateIgnored()"],"anchor":"Supporting-macros"}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(accessor, names: named(init), named(get), named(set)) ","kind":"text"},{"text":"@attached","kind":"attribute"},{"text":"(peer, names: prefixed(`_`)) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservationStateTracked","kind":"identifier"},{"text":"()","kind":"text"}]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateTracked()","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableState"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","role":"symbol","url":"\/documentation\/composablearchitecture\/observablestate()","kind":"symbol","title":"ObservableState()","abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducer\/state","title":"State","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"required":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateTracked()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateTracked()","kind":"symbol","type":"topic","title":"ObservationStateTracked()","abstract":[],"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservationStateTracked","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/composablearchitecture\/observationstatetracked()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"title":"ComposableArchitecture","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateIgnored()":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservationStateIgnored","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","title":"ObservationStateIgnored()","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateIgnored()","type":"topic","url":"\/documentation\/composablearchitecture\/observationstateignored()","abstract":[]}}}