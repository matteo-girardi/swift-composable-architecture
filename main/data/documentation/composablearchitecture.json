{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"sections":[],"kind":"symbol","metadata":{"externalID":"ComposableArchitecture","modules":[{"name":"ComposableArchitecture"}],"symbolKind":"module","title":"ComposableArchitecture","role":"collection","roleHeading":"Framework"},"abstract":[{"text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent","type":"text"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"text":" ","type":"text"},{"text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ"],"title":"Essentials","anchor":"Essentials"},{"identifiers":["doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps"],"title":"Tutorials","anchor":"Tutorials"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],"title":"State management","anchor":"State-management"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA"],"title":"Testing","anchor":"Testing"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit"],"title":"Integrations","anchor":"Integrations"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"],"title":"Migration guides","anchor":"Migration-guides"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey"],"title":"Structures","generated":true,"anchor":"Structures"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryFileStorage()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LiveFileStorage()"],"title":"Functions","generated":true,"anchor":"Functions"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction"],"title":"Enumerations","generated":true,"anchor":"Enumerations"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PerceptionCore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Sharing","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore"],"title":"Extended Modules","generated":true,"anchor":"Extended-Modules"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[[]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture"]}],"seeAlsoSections":[{"identifiers":["https:\/\/www.pointfree.co\/collections\/composable-architecture"],"title":"Related Documentation","abstract":[{"type":"text","text":"The collection of videos from "},{"isActive":true,"identifier":"https:\/\/www.pointfree.co","type":"reference"},{"type":"text","text":" that dive deep into the"},{"type":"text","text":" "},{"type":"text","text":"development of the library."}],"anchor":"Related-Documentation"}],"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Additional Resources","anchor":"Additional-Resources"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","isActive":true}]}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture","isActive":true,"type":"reference"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This library provides a few core tools that can be used to build applications of varying purpose and","type":"text"},{"text":" ","type":"text"},{"text":"complexity. It provides compelling stories that you can follow to solve many problems you encounter","type":"text"},{"text":" ","type":"text"},{"text":"day-to-day when building applications, such as:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"State management"}],"type":"strong"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to manage the state of your application using simple value types, and share state across"},{"type":"text","text":" "},{"type":"text","text":"many screens so that mutations in one screen can be immediately observed in another screen."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Composition","type":"text"}],"type":"strong"}]},{"type":"paragraph","inlineContent":[{"text":"How to break down large features into smaller components that can be extracted to their own,","type":"text"},{"text":" ","type":"text"},{"text":"isolated modules and be easily glued back together to form the feature.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Side effects"}]}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"How to let certain parts of the application talk to the outside world in the most testable and"},{"type":"text","text":" "},{"type":"text","text":"understandable way possible."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Testing","type":"text"}]}],"type":"paragraph"},{"inlineContent":[{"text":"How to not only test a feature built in the architecture, but also write integration tests for","type":"text"},{"text":" ","type":"text"},{"text":"features that have been composed of many parts, and write end-to-end tests to understand how","type":"text"},{"text":" ","type":"text"},{"text":"side effects influence your application. This allows you to make strong guarantees that your","type":"text"},{"text":" ","type":"text"},{"text":"business logic is running in the way you expect.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Ergonomics","type":"text"}]}],"type":"paragraph"},{"inlineContent":[{"text":"How to accomplish all of the above in a simple API with as few concepts and moving parts as","type":"text"},{"text":" ","type":"text"},{"text":"possible.","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"title":"TestStore","abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"url":"\/documentation\/composablearchitecture\/teststore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryFileStorage()":{"role":"symbol","url":"\/documentation\/composablearchitecture\/inmemoryfilestorage()","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryFileStorage()","title":"InMemoryFileStorage()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InMemoryFileStorage","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"FileStorage","kind":"typeIdentifier","preciseIdentifier":"s:7Sharing11FileStorageV"}],"deprecated":true,"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction":{"role":"symbol","abstract":[{"text":"A wrapper type for actions that can be presented in a list.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","navigatorTitle":[{"text":"IdentifiedAction","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/identifiedaction","title":"IdentifiedAction","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IdentifiedAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Sharing":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Sharing","url":"\/documentation\/composablearchitecture\/sharing","role":"collection","abstract":[],"kind":"symbol","type":"topic","title":"Sharing"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"type":"text","text":" "},{"type":"text","text":"data to user defaults, the file system, and other external mediums."}],"url":"\/documentation\/composablearchitecture\/sharingstate","title":"Sharing state","type":"topic","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationBackport":{"title":"Observation backport","url":"\/documentation\/composablearchitecture\/observationbackport","abstract":[{"text":"Learn how the Observation framework from Swift 5.9 was backported to support iOS 16 and earlier,","type":"text"},{"text":" ","type":"text"},{"text":"as well as the caveats of using the backported tools.","type":"text"}],"role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport","type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PerceptionCore":{"url":"\/documentation\/composablearchitecture\/perceptioncore","abstract":[],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PerceptionCore","role":"collection","type":"topic","title":"PerceptionCore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"abstract":[{"text":"A type defining a user defaults persistence strategy via key path.","type":"text"}],"deprecated":true,"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppStorageKeyPathKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/appstoragekeypathkey","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","type":"topic","role":"symbol","navigatorTitle":[{"text":"AppStorageKeyPathKey","kind":"identifier"}],"title":"AppStorageKeyPathKey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestingTCA":{"abstract":[{"text":"Learn how to write comprehensive and exhaustive tests for your features built in the Composable","type":"text"},{"text":" ","type":"text"},{"text":"Architecture.","type":"text"}],"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA","url":"\/documentation\/composablearchitecture\/testingtca","title":"Testing"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"text":" ","type":"text"},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"role":"collectionGroup","type":"topic","title":"Navigation","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FAQ":{"role":"article","url":"\/documentation\/composablearchitecture\/faq","title":"Frequently asked questions","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ","type":"topic","abstract":[{"text":"A collection of some of the most common questions and comments people have concerning the library.","type":"text"}],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","kind":"article","title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","role":"collectionGroup","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftNavigation":{"abstract":[],"role":"collection","url":"\/documentation\/composablearchitecture\/swiftnavigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftNavigation","type":"topic","title":"SwiftNavigation","kind":"symbol"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"title":"Building SyncUps","kind":"overview","role":"overview","url":"\/tutorials\/buildingsyncups","type":"topic","abstract":[{"type":"text","text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,"},{"type":"text","text":" "},{"type":"text","text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on"},{"type":"text","text":" "},{"type":"text","text":"domain modeling, controlling dependencies, and testability."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftConcurrency":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","url":"\/documentation\/composablearchitecture\/swiftconcurrency","title":"Adopting Swift concurrency","type":"topic","role":"article","kind":"article","abstract":[{"type":"text","text":"Learn how to write safe, concurrent effects using Swift’s structured concurrency."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUICore":{"type":"topic","role":"collection","kind":"symbol","title":"SwiftUICore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore","abstract":[],"url":"\/documentation\/composablearchitecture\/swiftuicore"},"https://github.com/pointfreeco/swift-composable-architecture/discussions":{"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","title":"Discussions","titleInlineContent":[{"text":"Discussions","type":"text"}],"url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"},"https://github.com/pointfreeco/swift-composable-architecture":{"titleInlineContent":[{"type":"text","text":"GitHub Repo"}],"url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","type":"link","title":"GitHub Repo"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","title":"Effect","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/tutorials/MeetComposableArchitecture":{"kind":"overview","title":"Meet the Composable Architecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a"},{"type":"text","text":" "},{"type":"text","text":"consistent and understandable way, with composition, testing, and ergonomics in mind. It can be"},{"type":"text","text":" "},{"type":"text","text":"used in SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"overview","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","url":"\/tutorials\/meetcomposablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/GettingStarted":{"role":"article","abstract":[{"type":"text","text":"Learn how to integrate the Composable Architecture into your project and write your first"},{"type":"text","text":" "},{"type":"text","text":"application."}],"title":"Getting started","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","kind":"article","url":"\/documentation\/composablearchitecture\/gettingstarted","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/LiveFileStorage()":{"title":"LiveFileStorage()","deprecated":true,"type":"topic","kind":"symbol","role":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LiveFileStorage()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"LiveFileStorage"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"FileStorage","preciseIdentifier":"s:7Sharing11FileStorageV"}],"url":"\/documentation\/composablearchitecture\/livefilestorage()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"title":"ComposableArchitecture","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyManagement":{"url":"\/documentation\/composablearchitecture\/dependencymanagement","abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"type":"text","text":" "},{"type":"text","text":"any reducer."}],"kind":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","role":"article","title":"Dependencies"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"role":"article","type":"topic","abstract":[{"text":"Learn how to improve the performance of features built in the Composable Architecture.","type":"text"}],"title":"Performance","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","url":"\/documentation\/composablearchitecture\/performance"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"role":"collectionGroup","abstract":[{"type":"text","text":"Learn how to upgrade your application to the newest version of the Composable Architecture."}],"kind":"article","url":"\/documentation\/composablearchitecture\/migrationguides","title":"Migration guides","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"type":"topic","title":"Store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","url":"\/documentation\/composablearchitecture\/store","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}],"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"text":"around to views that need to interact with the application.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}]},"https://www.pointfree.co/collections/composable-architecture":{"type":"link","identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture","title":"Point-Free Videos","titleInlineContent":[{"text":"Point-Free Videos","type":"text"}],"url":"https:\/\/www.pointfree.co\/collections\/composable-architecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UIKit":{"abstract":[{"text":"Integrating the Composable Architecture into a UIKit application.","type":"text"}],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit","url":"\/documentation\/composablearchitecture\/uikit","type":"topic","title":"UIKit Integration"}}}